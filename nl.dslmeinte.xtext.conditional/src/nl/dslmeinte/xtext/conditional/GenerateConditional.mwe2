module nl.dslmeinte.xtext.conditional.GenerateConditional

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var grammarURI = "classpath:/nl/dslmeinte/xtext/conditional/Conditional.xtext"
var projectName = "nl.dslmeinte.xtext.conditional"
var runtimeProject = "../${projectName}"

Workflow {
    bean = StandaloneSetup {
        scanClassPath = true
        platformUri = "${runtimeProject}/.."
    }

    component = DirectoryCleaner {
        directory = "${runtimeProject}/src-gen/nl"	// do not wipe out .gitignore so src-gen remains in repository
    }

    component = DirectoryCleaner {
        directory = "${runtimeProject}.ui/src-gen"
    }

    component = Generator {
        pathRtProject = runtimeProject
        pathUiProject = "${runtimeProject}.ui"
        pathTestProject = "${runtimeProject}.tests"
        projectNameRt = projectName
        projectNameUi = "${projectName}.ui"
		mergeManifest = false	// avoids that MWE2 launch fails (manifest for this project is already checked in correctly)
        language = {
            uri = grammarURI
            fileExtensions = "$"	// bogus extension (never matched?)

			// very minimal generation!:

            fragment = grammarAccess.GrammarAccessFragment {}
            fragment = ecore.EcoreGeneratorFragment {}

            fragment = parser.antlr.XtextAntlrGeneratorFragment {}
            fragment = exporting.SimpleNamesFragment {}
            fragment = scoping.ImportNamespacesScopingFragment {}

        }
    }
}
