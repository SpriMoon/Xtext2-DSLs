grammar nl.dslmeinte.xtext.ambiguity.MyPL with org.eclipse.xtext.common.Terminals

generate myPL "http://www.dslmeinte.nl/xtext/ambiguity/MyPL"


Program: elements += (Class | Statement)*;


Class: 'class' name=ID '{' features+=Feature* '}';
Feature:	Class | Attribute;
Attribute:	name=ID ':' type=ID;		// (a DataType enum is nicer but unnecessary for the example)


Expression: IntegerLiteral;
IntegerLiteral: int=INT;


// our reworked grammar:

Variable:		name=ID;
FirstHeadType:	Class | Variable;
Named:			Class | Variable | Attribute;
	/*
	 * We need a common super type for all named things,
	 * otherwise Xtext will signal that Variable.name and FirstHeadType.name conflict
	 * since they are identical features but each existing in separate branches of the hierarchy.
	 */
Head:			first=[FirstHeadType] tail=FeatureRefTail?;
FeatureRefTail: '.' feature=[Feature] tail=FeatureRefTail?;

Statement:
	Head (
		({VariableDeclaration.typeRef=current} variable=Variable ':=' (value=Expression)?) |
		({Assignment.lhs=current} ':=' value=Expression)
	);

